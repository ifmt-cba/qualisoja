apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qualisoja.fullname" . }}
  labels:
    {{- include "qualisoja.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "qualisoja.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "qualisoja.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "qualisoja.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-migrate
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['python', 'manage.py', 'migrate']
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "qualisoja.fullname" . }}-secret
                  key: secret-key
            - name: DEBUG
              value: "{{ .Values.django.debug }}"
            - name: ALLOWED_HOSTS
              value: "{{ .Values.django.allowedHosts }}"
            {{- if .Values.postgresql.enabled }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "qualisoja.fullname" . }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_URL
              value: "redis://:{{ .Values.redis.auth.password }}@{{ include "qualisoja.fullname" . }}-redis-master:6379/0"
            {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "qualisoja.fullname" . }}-secret
                  key: secret-key
            - name: DEBUG
              value: "{{ .Values.django.debug }}"
            - name: ALLOWED_HOSTS
              value: "{{ .Values.django.allowedHosts }}"
            {{- if .Values.postgresql.enabled }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "qualisoja.fullname" . }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_URL
              value: "redis://:{{ .Values.redis.auth.password }}@{{ include "qualisoja.fullname" . }}-redis-master:6379/0"
            {{- end }}
            {{- if .Values.django.superuser.username }}
            - name: DJANGO_SUPERUSER_USERNAME
              value: "{{ .Values.django.superuser.username }}"
            - name: DJANGO_SUPERUSER_EMAIL
              value: "{{ .Values.django.superuser.email }}"
            - name: DJANGO_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "qualisoja.fullname" . }}-secret
                  key: superuser-password
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: static-volume
              mountPath: /app/staticfiles
            {{- if .Values.persistence.media.enabled }}
            - name: media-volume
              mountPath: /app/media
            {{- end }}
      volumes:
        - name: static-volume
          emptyDir: {}
        {{- if .Values.persistence.media.enabled }}
        - name: media-volume
          persistentVolumeClaim:
            claimName: {{ include "qualisoja.fullname" . }}-media
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
